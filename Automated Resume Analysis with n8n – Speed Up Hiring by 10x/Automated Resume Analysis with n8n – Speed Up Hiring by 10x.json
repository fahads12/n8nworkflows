{
  "name": "Automated Resume Analysis with n8n – Speed Up Hiring by 10x",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Resume: {{ $('Extract from File').item.json.text }}",
        "options": {
          "systemMessage": "=** Purpose **\nYou are a CV Evaluation and Summarization Agent. Your task is to extract key information from a CV and output it in a clean, structured format. You must also evaluate how well the candidate fits a specified job role and assign a relevance score (1–10), followed by a short justification.\n\n** How It Works **\nWhen provided with a CV and job description, follow this process:\n\n1. Extract & Summarize Information from the CV\n\n- Educational Qualifications\nInclude degrees, institutions, and graduation years.\n\n- Job History\nList job titles, company names, employment dates, and 1 short sentence summarizing key responsibilities or achievements.\n\n- Skill Set\nList technical, soft, or role-specific skills — separated by commas.\n\n2. Evaluate the Candidate for the Job Role\n\n- Compare the candidate’s qualifications and experience with the job requirements.\n- Assign a score from 1–10 based on relevance:\n\n1–3: Weak match\n\n4–6: Moderate match\n\n7–8: Strong match\n\n9–10: Excellent match\n\n- Provide a brief justification for the score. Mention strengths and gaps directly related to the role — no assumptions or interpretations.\n\nmatch the content so this code can retrieve the data:\n\n// ---------- 1.  Read input text ----------\nconst inputData = $input.item.json.content;\n\n// ---------- 2.  Helper: extract a block that starts with a bold header ----------\nconst grabBlock = (text, header) => {\n  const re = new RegExp(`\\\\*{0,2}${header}\\\\*{0,2}\\\\s*([\\\\s\\\\S]*?)\\\\s*$`, 'i'); // capture to end of string\n  const m = re.exec(text);\n  return m ? m[1].trim() : null;\n};\n\n// ---------- 3.  Helper: extract a section that sits between bold headers ----------\nconst grabSection = (text, label) => {\n  /*  takes “**Label:** …” up to the next **Bold Header** or end  */\n  const re = new RegExp(\n    `\\\\*{0,2}${label}\\\\*{0,2}\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*{0,2}[A-Z][^\\\\n]*\\\\*{0,2}\\\\s*|$)`,\n    'i'\n  );\n  const m = re.exec(text);\n  return m ? m[1].trim() : null;\n};\n\n// ---------- 4.  Pull the three simple sections ----------\nconst educationalQualifications = grabSection(inputData, 'Educational Qualifications:');\nconst jobHistory               = grabSection(inputData, 'Job History:');\nconst skillSet                 = grabSection(inputData, 'Skill Set:');\n\n// ---------- 5.  Pull the whole “Evaluation …” block ----------\nconst evaluationBlock = grabBlock(inputData, 'Evaluation');  // matches “**Evaluation …**”\n\n// ---------- 6.  From that block, get score & justification ----------\nlet score = null;\nlet justification = null;\n\nif (evaluationBlock) {\n  // score can be “Relevance Score: 7/10”  or  “Score: 7/10”\n  const scoreMatch = /(Relevance\\s*)?Score:\\s*(\\d{1,2})\\s*\\/\\s*10/i.exec(evaluationBlock);\n  score = scoreMatch ? scoreMatch[2] : null;\n\n  const justMatch = /\\*{0,2}Justification:\\*{0,2}\\s*([\\s\\S]*)/i.exec(evaluationBlock);\n  if (justMatch) {\n    justification = justMatch[1].trim();\n  }\n}\n\n// ---------- 7.  Return tidy JSON ----------\nreturn [\n  {\n    educationalQualifications,\n    jobHistory,\n    skillSet,\n    score,\n    justification\n  }\n];\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1480,
        -220
      ],
      "id": "b605b30f-db88-419a-aefc-6ea3bf6802c2",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {
          "keepSource": "json"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1140,
        -580
      ],
      "id": "8597c017-8265-4b84-97e9-1cc29ea89244",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "q": "resume"
        },
        "options": {
          "dataPropertyAttachmentsPrefixName": "cv",
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -1800,
        -580
      ],
      "id": "0edf7d0e-8b69-4936-9922-b4d5d6b678bd",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "0wvaFjbbANuyUYkA",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"phone_number\": {\n      \"type\": \"string\",\n      \"pattern\": \"^(\\\\+\\\\d{1,3}[- ]?)?\\\\d{10}$\"\n    }\n  },\n  \"required\": [\"name\", \"email\", \"phone_number\"]\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -1880,
        -220
      ],
      "id": "4460d379-e72b-4d3e-904c-d627ee2a9499",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1640,
        0
      ],
      "id": "5f026ea9-fcc0-4220-8675-cd0fc518f695",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "Q8sm1aa9DzoEzGkG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ---------- 1.  Read input text ----------\nconst inputData = $input.item.json.content;\n\n// ---------- 2.  Helper: extract a block that starts with a bold header ----------\nconst grabBlock = (text, header) => {\n  const re = new RegExp(`\\\\*{0,2}${header}\\\\*{0,2}\\\\s*([\\\\s\\\\S]*?)\\\\s*$`, 'i'); // capture to end of string\n  const m = re.exec(text);\n  return m ? m[1].trim() : null;\n};\n\n// ---------- 3.  Helper: extract a section that sits between bold headers ----------\nconst grabSection = (text, label) => {\n  /*  takes “**Label:** …” up to the next **Bold Header** or end  */\n  const re = new RegExp(\n    `\\\\*{0,2}${label}\\\\*{0,2}\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*{0,2}[A-Z][^\\\\n]*\\\\*{0,2}\\\\s*|$)`,\n    'i'\n  );\n  const m = re.exec(text);\n  return m ? m[1].trim() : null;\n};\n\n// ---------- 4.  Pull the three simple sections ----------\nconst educationalQualifications = grabSection(inputData, 'Educational Qualifications:');\nconst jobHistory               = grabSection(inputData, 'Job History:');\nconst skillSet                 = grabSection(inputData, 'Skill Set:');\n\n// ---------- 5.  Pull the whole “Evaluation …” block ----------\nconst evaluationBlock = grabBlock(inputData, 'Evaluation');  // matches “**Evaluation …**”\n\n// ---------- 6.  From that block, get score & justification ----------\nlet score = null;\nlet justification = null;\n\nif (evaluationBlock) {\n  // score can be “Relevance Score: 7/10”  or  “Score: 7/10”\n  const scoreMatch = /(Relevance\\s*)?Score:\\s*(\\d{1,2})\\s*\\/\\s*10/i.exec(evaluationBlock);\n  score = scoreMatch ? scoreMatch[2] : null;\n\n  const justMatch = /\\*{0,2}Justification:\\*{0,2}\\s*([\\s\\S]*)/i.exec(evaluationBlock);\n  if (justMatch) {\n    justification = justMatch[1].trim();\n  }\n}\n\n// ---------- 7.  Return tidy JSON ----------\nreturn [\n  {\n    educationalQualifications,\n    jobHistory,\n    skillSet,\n    score,\n    justification\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        -220
      ],
      "id": "3755ef77-fc32-4138-a1ad-c263437c359f",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a83198df-e404-4500-a4a0-36d3474af4a6",
              "name": "content",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1120,
        -220
      ],
      "id": "1a3fb616-00fe-4518-8b7e-97baf65e261a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1T5WnMygcoRe4F_8_g4NhYp9OVfHzhDuBz_V8_oQlz74",
          "mode": "list",
          "cachedResultName": "List of candidates",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1T5WnMygcoRe4F_8_g4NhYp9OVfHzhDuBz_V8_oQlz74/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1T5WnMygcoRe4F_8_g4NhYp9OVfHzhDuBz_V8_oQlz74/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{ $('Information Extractor').item.json.output.name }}",
            "Email": "={{ $('Information Extractor').item.json.output.email }}",
            "Number": "={{ $('Information Extractor').item.json.output.phone_number }}",
            "Skill Set": "={{ $json.skillSet }}",
            "Qualifications": "={{ $json.educationalQualifications }}",
            "Job History": "={{ $json.jobHistory }}",
            "Score": "={{ $json.score }}",
            "Justification": "={{ $json.justification }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Number",
              "displayName": "Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Skill Set",
              "displayName": "Skill Set",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qualifications",
              "displayName": "Qualifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job History",
              "displayName": "Job History",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Justification",
              "displayName": "Justification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -600,
        -220
      ],
      "id": "93e0acd0-f33c-4a7a-ad7c-15eac40587d9",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IsHpvw1wCzuxtxLZ",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "inputDataFieldName": "cv0",
        "name": "={{ $json.from.value[0].name }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1wV58NbXXmNi87C-HK8kDcNPruOHl1pbz",
          "mode": "list",
          "cachedResultName": "Job Resumes",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1wV58NbXXmNi87C-HK8kDcNPruOHl1pbz"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1580,
        -580
      ],
      "id": "9eb315cd-da88-4111-b4c7-a84f7f6fd23b",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "DKtc2B7Pu2I810wE",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Inputting Resume's",
        "height": 320,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1900,
        -680
      ],
      "id": "8e532bb6-6840-43e0-bb5d-6b2b6dd83c89",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Extract Information & Evaluate the Candidates",
        "height": 460,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1920,
        -320
      ],
      "id": "11f97192-d3d6-4ea6-9bc6-43283ba19427",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Save Data",
        "height": 260,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -720,
        -320
      ],
      "id": "d137b4cb-008d-45ab-8d51-3abd5fd8c48f",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1360,
        -580
      ],
      "id": "921b1f1d-1e4a-45d7-abe4-0863bd705dcd",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "DKtc2B7Pu2I810wE",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ef310a7b-169f-4b3d-9909-15ced2e07b24",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7131d60360e7520b33c49d08eba5bc2a27bfc36c962ac1af8533879bab252343"
  },
  "id": "siqIEr79iayw0fF6",
  "tags": []
}