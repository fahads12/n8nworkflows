{
  "name": "Escalation Bot Using Sentiment Detection",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        320,
        140
      ],
      "id": "97963c9e-bf57-4a94-a4a9-fae79f58a604",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        160,
        -100
      ],
      "id": "7e3d13d8-240e-4a70-9db5-20842ea2d18f",
      "name": "Telegram Trigger",
      "webhookId": "54009369-5f84-417f-bbe6-b356e58b0e94"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}\n{{ $now }} \n{{ $json.message.from.first_name }}\n{{ $json.message.from.last_name }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Classify the sentiment of the following message as \"positive\", \"neutral\", or \"negative\".  \nMessage: \"{{ $json.message.text }}\"\nReturn only the sentiment in one word.\nAlso write \nUser, Message, Sentiment, Timestamp, in seprate JSON Values.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        380,
        -100
      ],
      "id": "a63a51a0-52ba-4fa7-8a42-d24e71277f24",
      "name": "Escalation Bot Using Sentiment Detection"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"user\": \"\",\n\t\"Message\":\"\",\n    \"Sentiment\":\"\",\n    \"TimeStamp\":\"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        600,
        140
      ],
      "id": "d57f266c-6c6d-4c63-b871-d9e03d3cd8f5",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        740,
        -100
      ],
      "id": "e658a988-69c7-4293-82d8-5d29ab47ffad",
      "name": "Write in Google Sheets"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Escalation Bot Using Sentiment Detection",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Escalation Bot Using Sentiment Detection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escalation Bot Using Sentiment Detection": {
      "main": [
        [
          {
            "node": "Write in Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Escalation Bot Using Sentiment Detection",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "76387df3-83f7-4a6e-bd81-4c3c02f2652c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7131d60360e7520b33c49d08eba5bc2a27bfc36c962ac1af8533879bab252343"
  },
  "id": "yeHnJWjma96ZnKS2",
  "tags": []
}